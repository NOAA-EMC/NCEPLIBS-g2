# This is a GitHub actions workflow for NCEPLIBS-g2.
#
# This builds the develop branch with documentation, warning check,
# and address sanitizer.
#
# Ed Hartnett, 12/22/22
name: developer
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  developer:
    runs-on: ubuntu-latest
    env:
      FC: gfortran
      CC: gcc

    strategy:
      fail-fast: true
      matrix:
        config: ["asan/code coverage", "memcheck"]

    steps:

    - name: install-dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev zlib1g-dev libjpeg-dev doxygen gcovr valgrind tcl tcl-dev

    - name: checkout-bacio
      uses: actions/checkout@v3
      with:
        repository: NOAA-EMC/NCEPLIBS-bacio
        path: bacio
        ref: develop

    - name: build-bacio
      run: |
        cd bacio
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/bacio
        make -j2
        make install

    - name: checkout-w3emc
      uses: actions/checkout@v3
      with:
        repository: NOAA-EMC/NCEPLIBS-w3emc
        path: w3emc
        ref: develop

    - name: build-w3emc
      run: |
        cd w3emc
        mkdir build
        cd build
        cmake -DCMAKE_PREFIX_PATH=~/bacio -DCMAKE_INSTALL_PREFIX=~/w3emc -DBUILD_WITH_BUFR=OFF ..
        make -j2
        make install

    - name: cache-jasper
      id: cache-jasper
      uses: actions/cache@v3
      with:
        path: ~/Jasper
        key: jasper-${{ runner.os }}-3.0.3

    - name: checkout-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: jasper-software/jasper
        path: jasper
        ref: version-3.0.3

    - name: build-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      run: |
        cd jasper
        mkdir build-jasper && cd build-jasper
        cmake .. -DCMAKE_INSTALL_PREFIX=~/Jasper
        make -j2
        make install

    - name: checkout
      uses: actions/checkout@v3
      with:
        path: g2

    - name: cache-data
      id: cache-data
      uses: actions/cache@v3
      with:
        path: ~/data
        key: data-2

    - name: asan
      if: matrix.config == 'asan/code coverage'
      run: |
        set -x
        cd g2
        mkdir build
        doxygen --version
        cd build
        cmake -DENABLE_DOCS=On -DJasper_ROOT=~/Jasper -DCMAKE_PREFIX_PATH="~/bacio;~/w3emc" -DCMAKE_Fortran_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fno-omit-frame-pointer -fsanitize=address" -DCMAKE_C_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fno-omit-frame-pointer -fsanitize=address" -DFTP_TEST_FILES=ON -DTEST_FILE_DIR=/home/runner/data -DCMAKE_BUILD_TYPE=Debug ..
        make -j2 VERBOSE=1

    - name: memcheck
      if: matrix.config == 'memcheck'
      run: |
        cd g2
        mkdir build
        cd build
        cmake -DENABLE_DOCS=On -DJasper_ROOT=~/Jasper -DCMAKE_PREFIX_PATH="~/bacio;~/w3emc" -DCMAKE_Fortran_FLAGS="-g -O0" -DCMAKE_C_FLAGS="-g -O0" -DFTP_TEST_FILES=ON -DTEST_FILE_DIR=/home/runner/data -DCMAKE_BUILD_TYPE=Debug ..
        make -j2 VERBOSE=1

    - name: test_asan
      if: matrix.config == 'asan/code coverage'
      run: |
        cd $GITHUB_WORKSPACE/g2/build
        ctest --verbose --output-on-failure --rerun-failed
        gcovr --root .. -v  --html-details --exclude ../tests --exclude CMakeFiles --print-summary -o test-coverage.html &> /dev/null

    - name: test_memcheck
      if: matrix.config == 'memcheck'
      run: |
        cd $GITHUB_WORKSPACE/g2/build        
        ctest -T memcheck

    - name: cache-data
      if: steps.cache-data.outputs.cache-hit != 'true'
      run: |
        mkdir ~/data
        cp $GITHUB_WORKSPACE/g2/build/tests/data/* ~/data

    - name: upload-test-coverage
      if: matrix.config == 'asan/code coverage'
      uses: actions/upload-artifact@v3
      with:
        name: g2-test-coverage
        path: |
          g2/build/*.html
          g2/build/*.css

