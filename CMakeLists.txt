cmake_minimum_required(VERSION 2.6)
project(g2)
set(VERSION v3.1.0)
enable_language (Fortran)
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
        "Choose the type of build, options are: PRODUCTION Debug Release."
        FORCE)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  set(IntelComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU*")
  set(GNUComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "pgc*")
  set(PGIComp true )
endif()
MESSAGE(${CMAKE_CURRENT_SOURCE_DIR})
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
if( NOT BUILD_RELEASE )
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
endif()
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)

STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "DEGUG" BUILD_DEBUG)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

find_package( Jasper )
find_package( PNG )
find_package( ZLIB )

if(IntelComp)
    set(CMAKE_C_FLAGS "-O3 -g -DLINUX -D__64BIT__" CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-O3 -g -assume noold_ldout_format -r8 " CACHE INTERNAL "" )
    set(CMAKE_Fortran_4_FLAGS "-O3 -g -assume noold_ldout_format " CACHE INTERNAL "" )
elseif(GNUComp)
    set(CMAKE_C_FLAGS "-O3 -ggdb -Wall -DLINUX -D__64BIT__" CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-fdefault-real-8 -O3 -funroll-loops -ggdb -fno-range-check" CACHE INTERNAL "" )
    set(CMAKE_Fortran_4_FLAGS "-O3 -funroll-loops -ggdb -fno-range-check" CACHE INTERNAL "" )
elseif(PGIComp)
    set(CMAKE_C_FLAGS "-g -fast -DLINUX -D__64BIT__" CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-r8 -g -fast " CACHE INTERNAL "" )
    set(CMAKE_Fortran_4_FLAGS "-g -fast " CACHE INTERNAL "" )
else()
    message("unknown compiler!")
    exit()
endif()
add_subdirectory(double)
add_subdirectory(4byte)
#include( CTest )
#add_subdirectory(unit_test)
